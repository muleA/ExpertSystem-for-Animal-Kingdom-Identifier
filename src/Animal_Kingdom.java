/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nabil mohd
 */

import org.jpl7.*;
import java.util.Map;
import java.util.ArrayList;
import java.util.regex.*;
import javax.swing.JOptionPane;


public class Animal_Kingdom extends javax.swing.JFrame {

boolean knowledgeParse;



    /**
     * Creates new form Animal_Kingdom
     */
    public Animal_Kingdom() {
       
        initComponents();       
        helpBtn.setEnabled(false);
        try
        {       
        Query qe =new Query("consult('C:/Users/nabil mohd/Documents/NetBeansProjects/AI Animal Kingdom/src/Prolog code/animal.pl')");
        knowledgeParse=qe.hasSolution();        
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error parsing knowledge","Error",JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jPanel2 = new javax.swing.JPanel();
        label2 = new java.awt.Label();
        queryTextField = new java.awt.TextField();
        queryResult = new java.awt.TextArea();
        queryBtn = new java.awt.Button();
        helpBtn = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Animani");
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(151, 142, 244));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/animani.jpg"))); // NOI18N

        label1.setFont(new java.awt.Font("Verdana", 0, 16)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 255, 255));
        label1.setText("Hi, I am Animani, an expert zoologist. How can I help you.");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(72, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(191, 177, 240));

        label2.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        label2.setForeground(new java.awt.Color(255, 255, 255));
        label2.setText("Enter animal name");

        queryResult.setEditable(false);

        queryBtn.setLabel("Query");
        queryBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                queryBtnActionPerformed(evt);
            }
        });

        helpBtn.setLabel("Help Animani");
        helpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queryResult, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(queryBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(helpBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(queryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(63, 63, 63)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(queryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(queryBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(helpBtn, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addComponent(queryResult, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void queryBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_queryBtnActionPerformed
        // TODO add your handling code here:
        String query;
         
        queryResult.setText("");
        if(!"".equals(queryTextField.getText()))
        {
               
                if(queryTextField.getText().contains("  "))
                {
                    query="'"+queryTextField.getText().toLowerCase()+"'";
                }
                else{
                     query=queryTextField.getText().toLowerCase();
                }
                Term term [] = new Term[]{new Atom(query),new Variable("X")};
                Query q= new Query("animaltype",term);
                
                String response;
                
                if(q.hasSolution())
                 {

                  helpBtn.setEnabled(false);
                  Map sol= q.oneSolution();
                  String animalType = sol.get("X").toString();
                  response=queryTextField.getText().toUpperCase()+" is a "+animalType;
                  Feature.speak(response);
                  for(int i=0;i<response.length();i++)
                  {    
                     queryResult.append(response.charAt(i)+"");
                     try{   
                     Thread.sleep(100);
                     }
                     catch(Exception e)
                     {
                      //no error at all
                     }
                  }

                  queryResult.append(".\n");
                  
                  response="And it has the following characteristics :";
                  for(int i=0;i<response.length();i++)
                  {                  
                    queryResult.append(response.charAt(i)+"");
                     try
                     {   
                     Thread.sleep(100);
                     }
                     catch(Exception e)
                     {
                      //no error at all
                     }
                  }
                  queryResult.append("\n");
                  
                  ArrayList properties=new ArrayList();
                  Term term2 [] = new Term[]{new Atom("animal"),new Variable("Y")};
                  Query q2=new Query("property",term2);
                  Map sol2= q2.oneSolution();  
                  ArrayList stringProperties= new ArrayList();                  
                  Pattern pattern=Pattern.compile("'[^']*(?:''[^']*)*'");
                  Matcher matcher=pattern.matcher(sol2.get("Y").toString());
                  while(matcher.find())
                  {
                    properties.add(matcher.group());
                  }
                  for(int i=0;i<properties.size();i++)
                   {                    
                      if(!properties.get(i).toString().contains("["))
                         stringProperties.add(properties.get(i).toString().substring(1,properties.get(i).toString().length()-1));
                   }
                  for(int i=0;i<stringProperties.size();i++)
                   {                    
                       String str=stringProperties.get(i).toString();
                       for(int j=0;j<str.length();j++)
                         {   
                            queryResult.append(str.charAt(j)+"");
                            try
                             {   
                                Thread.sleep(100);
                             }
                            catch(Exception e)
                            {
                                //no error at all
                            }
                         }
                       queryResult.append(".\n");
                   }
                  
                  properties=new ArrayList();
                  Term term3 [] = new Term[]{new Atom(animalType),new Variable("Y")};
                  Query q3=new Query("property",term3);
                  Map sol3= q3.oneSolution();  
                  stringProperties= new ArrayList();                 
                  matcher=pattern.matcher(sol3.get("Y").toString());
                  while(matcher.find())
                  {
                    properties.add(matcher.group());
                  }
                  for(int i=0;i<properties.size();i++)
                   {                    
                      if(!properties.get(i).toString().contains("["))
                         stringProperties.add(properties.get(i).toString().substring(1,properties.get(i).toString().length()-1));
                   }
                  for(int i=0;i<stringProperties.size();i++)
                   {                    
                       String str=stringProperties.get(i).toString();
                       for(int j=0;j<str.length();j++)
                         {   
                            queryResult.append(str.charAt(j)+"");
                            try
                             {   
                                Thread.sleep(100);
                             }
                            catch(Exception e)
                            {
                                //no error at all
                            }
                         }
                       queryResult.append(".\n");
                   }
                 }
                else
                {
                  response="Sorry I couldn't classify "+queryTextField.getText().toUpperCase();
                
                  for(int i=0;i<response.length();i++)
                  {    
                     queryResult.append(response.charAt(i)+"");
                     try{   
                     Thread.sleep(100);
                     }
                     catch(Exception e)
                     {
                      //no error at all
                     }
                  }
                  queryResult.append(".\n");
                  
                 response="Can you please help me";
                
                  for(int i=0;i<response.length();i++)
                  {    
                     queryResult.append(response.charAt(i)+"");
                     try{   
                     Thread.sleep(100);
                     }
                     catch(Exception e)
                     {
                      //no error at all
                     }
                  }
                  queryResult.append("?\n");
                  
                  helpBtn.setEnabled(true);
                }
                
                    
            }       
        
    }//GEN-LAST:event_queryBtnActionPerformed

    private void helpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpBtnActionPerformed
        // TODO add your handling code here:
         HelpDialog help=new HelpDialog(this,true,queryTextField.getText());
         help.setVisible(true);
         queryTextField.setText("");
         queryResult.setText("");
         helpBtn.setEnabled(false);
   
        try
        {       
        Query qe =new Query("consult('C:/Users/nabil mohd/Documents/NetBeansProjects/AI Animal Kingdom/src/Prolog code/animal.pl')");
        knowledgeParse=qe.hasSolution();        
        
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,"Error parsing knowledge","Error",JOptionPane.ERROR_MESSAGE);
            System.exit(0);
        }
    }//GEN-LAST:event_helpBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Animal_Kingdom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Animal_Kingdom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Animal_Kingdom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Animal_Kingdom.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Animal_Kingdom().setVisible(true);      
            }
        });
        Feature.speak("Hi, I am Animani, an expert zoologist. How can I help you.");          
                
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button helpBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Button queryBtn;
    private java.awt.TextArea queryResult;
    private java.awt.TextField queryTextField;
    // End of variables declaration//GEN-END:variables
}
