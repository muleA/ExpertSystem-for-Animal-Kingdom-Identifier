/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author nabil mohd
 */
import javax.swing.ButtonGroup;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.JOptionPane;
import org.jpl7.*;
import java.io.*;

public class HelpDialog extends javax.swing.JDialog {

    /**
     * Creates new form HelpDialog
     */
    String organismName;
    String question;
    ButtonGroup grp;
    ArrayList animalProperties=new ArrayList();
    ArrayList specificProperties=new ArrayList();
    
    
    public HelpDialog(java.awt.Frame parent, boolean modal,String query) {
        super(parent, modal);
        initComponents();
        grp= new ButtonGroup();
        grp.add(yesRadioBtn);
        grp.add(noRadioBtn);
        organismName=query;
        String request = "Please tell me what are the characteristics of "+organismName;
        requestLabel.setText(request);
        question = "Can you see "+organismName+" with  your naked eyes";
        questionLabel.setText(question);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        requestLabel = new javax.swing.JLabel();
        propertiesTab = new javax.swing.JTabbedPane();
        animalPropertiesTab = new javax.swing.JPanel();
        questionLabel = new javax.swing.JLabel();
        yesRadioBtn = new javax.swing.JRadioButton();
        noRadioBtn = new javax.swing.JRadioButton();
        cancelBtn = new javax.swing.JButton();
        animalTypeProperties = new javax.swing.JPanel();
        milkCheckBox = new javax.swing.JCheckBox();
        hairCheckBox = new javax.swing.JCheckBox();
        neocortexCheckBox = new javax.swing.JCheckBox();
        featherCheckBox = new javax.swing.JCheckBox();
        eggCheckBox = new javax.swing.JCheckBox();
        beakCheckBox = new javax.swing.JCheckBox();
        gillsCheckBox = new javax.swing.JCheckBox();
        scalesCheckBox = new javax.swing.JCheckBox();
        finsCheckBox = new javax.swing.JCheckBox();
        scalySkinCheckBox = new javax.swing.JCheckBox();
        nextBtn = new javax.swing.JButton();
        cancelBtn2 = new javax.swing.JButton();
        animalTypeProperties2 = new javax.swing.JPanel();
        liveInWaterCheckBox = new javax.swing.JCheckBox();
        bornInWaterCheckBox = new javax.swing.JCheckBox();
        liveInLandCheckBox = new javax.swing.JCheckBox();
        segmentedBodyCheckBox = new javax.swing.JCheckBox();
        jointedLegsCheckBox = new javax.swing.JCheckBox();
        exoskeletonCheckBox = new javax.swing.JCheckBox();
        coldBloodedCheckBox = new javax.swing.JCheckBox();
        bornInLandCheckBox = new javax.swing.JCheckBox();
        cancelBtn3 = new javax.swing.JButton();
        finishBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(151, 142, 244));

        requestLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        requestLabel.setForeground(new java.awt.Color(255, 255, 255));
        requestLabel.setText("Please tell me what are characteristics of");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(requestLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(requestLabel)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 410, -1));

        animalPropertiesTab.setBackground(new java.awt.Color(191, 177, 240));

        questionLabel.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        questionLabel.setForeground(new java.awt.Color(255, 255, 255));

        yesRadioBtn.setText("Yes");
        yesRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesRadioBtnActionPerformed(evt);
            }
        });

        noRadioBtn.setText("No");
        noRadioBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noRadioBtnActionPerformed(evt);
            }
        });

        cancelBtn.setText("Cancel");
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout animalPropertiesTabLayout = new javax.swing.GroupLayout(animalPropertiesTab);
        animalPropertiesTab.setLayout(animalPropertiesTabLayout);
        animalPropertiesTabLayout.setHorizontalGroup(
            animalPropertiesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalPropertiesTabLayout.createSequentialGroup()
                .addGroup(animalPropertiesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalPropertiesTabLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(animalPropertiesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(questionLabel)
                            .addGroup(animalPropertiesTabLayout.createSequentialGroup()
                                .addComponent(yesRadioBtn)
                                .addGap(37, 37, 37)
                                .addComponent(noRadioBtn))))
                    .addGroup(animalPropertiesTabLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(cancelBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        animalPropertiesTabLayout.setVerticalGroup(
            animalPropertiesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalPropertiesTabLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(questionLabel)
                .addGap(29, 29, 29)
                .addGroup(animalPropertiesTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(yesRadioBtn)
                    .addComponent(noRadioBtn))
                .addGap(53, 53, 53)
                .addComponent(cancelBtn)
                .addContainerGap(71, Short.MAX_VALUE))
        );

        propertiesTab.addTab("tab1", animalPropertiesTab);

        animalTypeProperties.setBackground(new java.awt.Color(191, 177, 240));

        milkCheckBox.setText("Produce milk");

        hairCheckBox.setText("Has hair or fur");

        neocortexCheckBox.setText("Has a neocortex");

        featherCheckBox.setText("Has feather");

        eggCheckBox.setText("Lays hard shelled eggs");

        beakCheckBox.setText("Has a beak");

        gillsCheckBox.setText("Has gills");

        scalesCheckBox.setText("Has scales");

        finsCheckBox.setText("Has fins");

        scalySkinCheckBox.setText("Has scaly skin");

        nextBtn.setText("Next");
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });

        cancelBtn2.setText("Cancel");
        cancelBtn2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtn2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout animalTypePropertiesLayout = new javax.swing.GroupLayout(animalTypeProperties);
        animalTypeProperties.setLayout(animalTypePropertiesLayout);
        animalTypePropertiesLayout.setHorizontalGroup(
            animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalTypePropertiesLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(eggCheckBox)
                    .addComponent(featherCheckBox)
                    .addComponent(neocortexCheckBox)
                    .addComponent(hairCheckBox)
                    .addComponent(milkCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 61, Short.MAX_VALUE)
                .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gillsCheckBox)
                    .addComponent(scalySkinCheckBox)
                    .addComponent(finsCheckBox)
                    .addComponent(scalesCheckBox)
                    .addComponent(beakCheckBox))
                .addGap(16, 16, Short.MAX_VALUE)
                .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelBtn2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nextBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        animalTypePropertiesLayout.setVerticalGroup(
            animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, animalTypePropertiesLayout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(animalTypePropertiesLayout.createSequentialGroup()
                            .addComponent(beakCheckBox)
                            .addGap(18, 18, 18)
                            .addComponent(gillsCheckBox)
                            .addGap(20, 20, 20)
                            .addComponent(scalesCheckBox)
                            .addGap(18, 18, 18)
                            .addComponent(finsCheckBox))
                        .addGroup(animalTypePropertiesLayout.createSequentialGroup()
                            .addGap(71, 71, 71)
                            .addComponent(nextBtn)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(cancelBtn2)))
                    .addGroup(animalTypePropertiesLayout.createSequentialGroup()
                        .addComponent(milkCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(hairCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(neocortexCheckBox)
                        .addGap(18, 18, 18)
                        .addComponent(featherCheckBox)
                        .addGap(18, 18, 18)
                        .addGroup(animalTypePropertiesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(eggCheckBox)
                            .addComponent(scalySkinCheckBox))))
                .addGap(28, 28, 28))
        );

        propertiesTab.addTab("tab2", animalTypeProperties);

        animalTypeProperties2.setBackground(new java.awt.Color(191, 177, 240));

        liveInWaterCheckBox.setText("Lives in water");

        bornInWaterCheckBox.setText("Born in water");

        liveInLandCheckBox.setText("Lives in land");

        segmentedBodyCheckBox.setText("Segmented body");

        jointedLegsCheckBox.setText("Has many jointed legs");

        exoskeletonCheckBox.setText("Exoskeleton");

        coldBloodedCheckBox.setText("Cold blooded");

        bornInLandCheckBox.setText("Born in land");

        cancelBtn3.setText("Cancel");
        cancelBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtn3ActionPerformed(evt);
            }
        });

        finishBtn.setText("Finish");
        finishBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout animalTypeProperties2Layout = new javax.swing.GroupLayout(animalTypeProperties2);
        animalTypeProperties2.setLayout(animalTypeProperties2Layout);
        animalTypeProperties2Layout.setHorizontalGroup(
            animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                        .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bornInWaterCheckBox)
                            .addComponent(bornInLandCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                        .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(liveInLandCheckBox)
                            .addComponent(liveInWaterCheckBox)
                            .addComponent(coldBloodedCheckBox))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jointedLegsCheckBox)
                            .addComponent(exoskeletonCheckBox)
                            .addComponent(segmentedBodyCheckBox))
                        .addGap(28, 28, 28)))
                .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelBtn3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(finishBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21))
        );
        animalTypeProperties2Layout.setVerticalGroup(
            animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, animalTypeProperties2Layout.createSequentialGroup()
                .addContainerGap(25, Short.MAX_VALUE)
                .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                        .addGap(71, 71, 71)
                        .addComponent(finishBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelBtn3))
                    .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                        .addComponent(bornInLandCheckBox)
                        .addGap(18, 18, 18)
                        .addGroup(animalTypeProperties2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                                .addComponent(coldBloodedCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(liveInWaterCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(liveInLandCheckBox))
                            .addGroup(animalTypeProperties2Layout.createSequentialGroup()
                                .addComponent(segmentedBodyCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(jointedLegsCheckBox)
                                .addGap(20, 20, 20)
                                .addComponent(exoskeletonCheckBox)))
                        .addGap(18, 18, 18)
                        .addComponent(bornInWaterCheckBox)))
                .addGap(28, 28, 28))
        );

        propertiesTab.addTab("tab3", animalTypeProperties2);

        getContentPane().add(propertiesTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 410, 270));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void yesRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesRadioBtnActionPerformed
        // TODO add your handling code here:
        if(animalProperties.isEmpty())
        {
         animalProperties.add("'Multi cellular'");
         this.nextQuestion();
         grp.clearSelection();
        }
        
        else if(animalProperties.size()==1)
        {
         animalProperties.add("'Heterotroph'");
         this.nextQuestion();
         grp.clearSelection();
        }
         
        else if(animalProperties.size()==2)
        {
         animalProperties.add("'Can move by its own'");
         this.nextQuestion();
         grp.clearSelection();
        }
         
        else if(animalProperties.size()==3)
        {
         animalProperties.add("'Reproduce sexually'");
         this.checkProperty(animalProperties);
         grp.clearSelection();
        }  
         
     
    }//GEN-LAST:event_yesRadioBtnActionPerformed

    private void noRadioBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noRadioBtnActionPerformed
        // TODO add your handling code here:
        if(animalProperties.isEmpty())
        {
         animalProperties.add("'Not multi cellular'");
         this.nextQuestion();
         grp.clearSelection();
        }
        
        else if(animalProperties.size()==1)
        {
         animalProperties.add("'Not heterotroph'");
         this.nextQuestion();
         grp.clearSelection();
        }
         
        else if(animalProperties.size()==2)
        {
         animalProperties.add("'Can not move by its own'");
         this.nextQuestion();
         grp.clearSelection();
        }
         
        else if(animalProperties.size()==3)
        {
         animalProperties.add("'Does not reproduce sexually'");
         this.checkProperty(animalProperties);
         grp.clearSelection();
        }  
         
    }//GEN-LAST:event_noRadioBtnActionPerformed

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        // TODO add your handling code here:
        
        if(milkCheckBox.isSelected())
          specificProperties.add("'"+milkCheckBox.getText()+"'");
        
        if(hairCheckBox.isSelected())
          specificProperties.add("'"+hairCheckBox.getText()+"'");
        
        if(neocortexCheckBox.isSelected())
          specificProperties.add("'"+neocortexCheckBox.getText()+"'");

        if(featherCheckBox.isSelected())
          specificProperties.add("'"+featherCheckBox.getText()+"'");
        
        if(eggCheckBox.isSelected())
          specificProperties.add("'"+eggCheckBox.getText()+"'");
        
        if(beakCheckBox.isSelected())
          specificProperties.add("'"+beakCheckBox.getText()+"'");
        
        if(gillsCheckBox.isSelected())
          specificProperties.add("'"+gillsCheckBox.getText()+"'");
        
        if(scalesCheckBox.isSelected())
          specificProperties.add("'"+scalesCheckBox.getText()+"'");

        if(finsCheckBox.isSelected())
          specificProperties.add("'"+finsCheckBox.getText()+"'");
        
        if(scalySkinCheckBox.isSelected())
          specificProperties.add("'"+scalySkinCheckBox.getText()+"'");
        
        propertiesTab.setSelectedIndex(2);        
    }//GEN-LAST:event_nextBtnActionPerformed

    private void finishBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishBtnActionPerformed
        // TODO add your handling code here:
        if(bornInLandCheckBox.isSelected())
          specificProperties.add("'"+bornInLandCheckBox.getText()+"'");
        
        if(coldBloodedCheckBox.isSelected())
          specificProperties.add("'"+coldBloodedCheckBox.getText()+"'");
        
        if(liveInWaterCheckBox.isSelected())
          specificProperties.add("'"+liveInWaterCheckBox.getText()+"'");

        if(liveInLandCheckBox.isSelected())
          specificProperties.add("'"+liveInLandCheckBox.getText()+"'");
        
        if(bornInWaterCheckBox.isSelected())
          specificProperties.add("'"+bornInWaterCheckBox.getText()+"'");
        
        if(segmentedBodyCheckBox.isSelected())
          specificProperties.add("'"+segmentedBodyCheckBox.getText()+"'");
        
        if(jointedLegsCheckBox.isSelected())
          specificProperties.add("'"+jointedLegsCheckBox.getText()+"'");
        
        if(exoskeletonCheckBox.isSelected())
          specificProperties.add("'"+exoskeletonCheckBox.getText()+"'");
        
        this.checkProperty(specificProperties);
    }//GEN-LAST:event_finishBtnActionPerformed

    private void cancelBtn2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtn2ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtn2ActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void cancelBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtn3ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBtn3ActionPerformed

    private void nextQuestion()
    {

        if(animalProperties.size()==1)
        {
        question = "Can "+organismName+" make his own food";
        questionLabel.setText(question);
        }
         
        else if(animalProperties.size()==2)
        {
        question = "Can "+organismName+" move from place to place by its own";
        questionLabel.setText(question);
        }
         
        else  if(animalProperties.size()==3)
        {
         question = "Does "+organismName+" reproduce sexually";
         questionLabel.setText(question);
        }  
         
 
    }
    
    private void checkProperty(ArrayList property)
    {
        
           
         
         Query q=new Query("classify("+property+",X)");

         if(q.hasSolution())
         {
           Map sol=q.oneSolution();
           String newFact=sol.get("X").toString();
           if("animal".equals(newFact))
           {
            propertiesTab.setSelectedIndex(1);
           }
            else
           {
             File file=new File("C:/Users/nabil mohd/Documents/NetBeansProjects/AI Animal Kingdom/src/Prolog code/animal.pl");
             FileWriter fw;
             try{
             fw= new FileWriter(file,true);
             BufferedWriter br=new BufferedWriter(fw);
             if(!organismName.contains(" "))
             br.write("\n"+newFact+"("+organismName+").");
             else
              br.write("\n"+newFact+"('"+organismName+"')."); 
            
             br.close();
             fw.close();
             }
             catch(IOException ioe)
             {
              JOptionPane.showMessageDialog(null,ioe.getMessage());
             }
             

             
             JOptionPane.showMessageDialog(null,organismName+" is a "+newFact+". Thank you for your help!"
                     ,"Help",JOptionPane.INFORMATION_MESSAGE);
             this.dispose();
           }
         }
         else
         {
          JOptionPane.showMessageDialog(null,"The characteristics of "+organismName+" is some what contradictory. Make sure that\n"
                  + "you entered the right characteristics.","Help",JOptionPane.INFORMATION_MESSAGE);
          this.dispose();
          
         }
    }
    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel animalPropertiesTab;
    private javax.swing.JPanel animalTypeProperties;
    private javax.swing.JPanel animalTypeProperties2;
    private javax.swing.JCheckBox beakCheckBox;
    private javax.swing.JCheckBox bornInLandCheckBox;
    private javax.swing.JCheckBox bornInWaterCheckBox;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JButton cancelBtn2;
    private javax.swing.JButton cancelBtn3;
    private javax.swing.JCheckBox coldBloodedCheckBox;
    private javax.swing.JCheckBox eggCheckBox;
    private javax.swing.JCheckBox exoskeletonCheckBox;
    private javax.swing.JCheckBox featherCheckBox;
    private javax.swing.JButton finishBtn;
    private javax.swing.JCheckBox finsCheckBox;
    private javax.swing.JCheckBox gillsCheckBox;
    private javax.swing.JCheckBox hairCheckBox;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JCheckBox jointedLegsCheckBox;
    private javax.swing.JCheckBox liveInLandCheckBox;
    private javax.swing.JCheckBox liveInWaterCheckBox;
    private javax.swing.JCheckBox milkCheckBox;
    private javax.swing.JCheckBox neocortexCheckBox;
    private javax.swing.JButton nextBtn;
    private javax.swing.JRadioButton noRadioBtn;
    private javax.swing.JTabbedPane propertiesTab;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JLabel requestLabel;
    private javax.swing.JCheckBox scalesCheckBox;
    private javax.swing.JCheckBox scalySkinCheckBox;
    private javax.swing.JCheckBox segmentedBodyCheckBox;
    private javax.swing.JRadioButton yesRadioBtn;
    // End of variables declaration//GEN-END:variables
}
